{"version":3,"sources":["api/index.js","components/Cards/Cards.jsx","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","images/covid19.jpg"],"names":["url","fetchData","country","a","dynamicUrl","console","log","axios","get","data","modifiedData","confirmed","recovered","deaths","lastUpdate","fetchDailyData","modifiedDailyData","map","dailyData","total","date","reportDate","countries","name","error","Cards","props","className","Grid","container","spacing","justify","item","component","Card","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","fill","backgroundColor","borderColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","dataFromAPI","this","src","corona","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d817bd6e.chunk.js","sourcesContent":["import axios from \"axios\";\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async (country) => {\n  let dynamicUrl = url;\n  if (country) {\n    dynamicUrl = `${url}/countries/${country}`;\n    console.log(\"dynamicUrl\", dynamicUrl);\n  }\n\n  try {\n    const { data } = await axios.get(dynamicUrl);\n    const modifiedData = {\n      confirmed: data.confirmed,\n      recovered: data.recovered,\n      deaths: data.deaths,\n      lastUpdate: data.lastUpdate,\n    };\n    console.log(\"modiified\", modifiedData);\n    return modifiedData;\n  } catch (error) {\n    console.log(\"errrororor\");\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n    const modifiedDailyData = data.map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate,\n    }));\n    return modifiedDailyData;\n  } catch (error) {\n    console.log(\"error in Index.js\");\n  }\n};\n\nexport const countries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`${url}/countries`);\n    return countries.map((country) => country.name);\n  } catch (error) {\n    console.error();\n  }\n};\n","import React from \"react\";\nimport \"./Cards.css\";\nimport CountUp from \"react-countup\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\n\nconst Cards = ({ props: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return \"Loading.....\";\n  }\n  return (\n    <div className=\"container\">\n      <Grid container spacing={3} justify=\"center\">\n        <Grid item component={Card} className=\"card infected\">\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={confirmed.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              No. of Covid-19 active caseas\n            </Typography>\n          </CardContent>\n        </Grid>\n\n        <Grid item component={Card} className=\"card recovered\">\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={recovered.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\"> Real DATE</Typography>\n            <Typography variant=\"body2\">\n              No. of Covid-19 active caseas\n            </Typography>\n          </CardContent>\n        </Grid>\n\n        <Grid item component={Card} className=\"card death\">\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={deaths.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\"> Real DATE</Typography>\n            <Typography variant=\"body2\">\n              No. of Covid-19 active caseas\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\nexport default Cards;\n","import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport \"./Chart.css\";\n\nconst Chart = ({ data, country }) => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n    fetchAPI();\n  }, []);\n\n  const lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            label: \"Infected\",\n            data: dailyData.map(({ confirmed }) => confirmed),\n            fill: true,\n            backgroundColor: \"rgba(75,192,192,0.2)\",\n            borderColor: \"rgba(75,192,192,1)\",\n          },\n          {\n            label: \"Death\",\n            data: dailyData.map(({ deaths }) => deaths),\n            fill: true,\n            backgroundColor: \"rgba(255,0,0,0.5)\",\n            borderColor: \"red\",\n          },\n        ],\n      }}\n    />\n  ) : null;\n  console.log(\"ajjjjj\", { data });\n\n  const barChart = data.confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"people\",\n            backgroundColor: [\n              \"rgba(0, 0, 255, 0.5)\",\n              \"rgba(0, 255, 0, 0.5)\",\n              \"rgba(255, 0, 0, 0.5)\",\n            ],\n            data: [\n              data.confirmed.value,\n              data.recovered.value,\n              data.deaths.value,\n            ],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `current state in ${country}` },\n      }}\n    />\n  ) : null;\n\n  return <div className=\"container\">{country ? barChart : lineChart}</div>;\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\nimport { countries } from \"../../api\";\n\nexport default function CountryPicker({ handleCountryChange }) {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchCountries = async () => {\n      setFetchedCountries(await countries());\n    };\n    fetchCountries();\n  }, [setFetchedCountries]);\n  console.log(\"xxxxx\", fetchedCountries);\n\n  return (\n    <div>\n      <FormControl className=\"formControl\">\n        <NativeSelect\n          className=\"formControl\"\n          defaultValue=\"\"\n          onChange={(e) => handleCountryChange(e.target.value)}\n        >\n          <option value=\"global\"> Global</option>\n          {fetchedCountries.map((country, i) => (\n            <option key={i} value={country}>\n              {country}\n            </option>\n          ))}\n        </NativeSelect>\n      </FormControl>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport corona from \"./images/covid19.jpg\";\nimport { fetchData, countries } from \"./api\";\n\nimport { Cards, Chart, CountryPicker } from \"./components\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: \"\",\n  };\n\n  async componentDidMount() {\n    const dataFromAPI = await fetchData();\n    this.setState({ data: dataFromAPI });\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n    console.log(\"fetchedData\", fetchedData);\n    this.setState({ data: fetchedData, country: country });\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <img className=\"image\" src={corona} />\n        <Cards props={this.state.data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={this.state.data} country={this.state.country} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/covid19.8cb8305f.jpg\";"],"sourceRoot":""}